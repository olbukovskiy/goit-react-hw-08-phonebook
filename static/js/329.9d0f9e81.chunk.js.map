{"version":3,"file":"static/js/329.9d0f9e81.chunk.js","mappings":"6UAGaA,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,4HAOTE,EAAQF,EAAAA,EAAAA,MAAH,8HAQLG,EAAQH,EAAAA,EAAAA,MAAH,iQAaLI,GAAYJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,iQAaTM,EAASN,EAAAA,EAAAA,OAAH,kqBA+BNO,EAASP,EAAAA,EAAAA,OAAH,ylB,6MCzENQ,EAAWR,EAAAA,EAAAA,OAAH,kf,UCEN,SAASS,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAC1C,OACE,SAACH,EAAD,CAAUI,UAAU,MAAMC,KAAK,SAASF,QAASA,EAAjD,SACGD,GAGN,CAEDD,EAAQK,aAAe,CACrBH,QAAS,kBAAM,IAAN,EACTD,SAAU,M,+BCVCK,GAAef,EAAAA,EAAAA,GAAOgB,EAAAA,EAAPhB,CAAH,0CAIZiB,EAAajB,EAAAA,EAAAA,IAAH,wgBCEjBkB,EAAYC,SAASC,cAAc,eAE9BC,EAAgB,KAEdC,EAAc,SAAC,GAA2B,IAAzBZ,EAAwB,EAAxBA,SAAUa,EAAc,EAAdA,QACtC,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KA+BA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,SAACC,GACD,WAAfA,EAAMC,MACRP,GAEH,EAGD,OADAQ,OAAOC,iBAAiB,UAAWJ,GAC5B,kBAAMG,OAAOE,oBAAoB,UAAWL,EAA5C,CACR,GAAE,CAACL,KAEJI,EAAAA,EAAAA,YAAU,WACR,OAAKF,IAMLS,EAAAA,EAAAA,IAAkBb,GAEX,kBAAMc,EAAAA,EAAAA,KAAN,IAPLT,GAAa,QACbL,EAAgBF,SAASC,cAAc,cAO1C,GAAE,CAACK,KAEGW,EAAAA,EAAAA,eACL,SAACrB,EAAD,CAAcsB,MAAM,EAAM1B,QA9BG,SAACkB,GAC1BA,EAAMS,SAAWT,EAAMU,eACzBhB,GAEH,EA0B4DiB,GAAG,WAA9D,UACE,UAACvB,EAAD,YACE,SAACR,EAAD,CAASE,QAASY,EAAlB,UACE,SAAC,MAAD,CAAsBkB,KAAK,WAE5B/B,OAGLQ,EAEH,ECvDYwB,EAAW1C,EAAAA,EAAAA,GAAH,mLAUR2C,EAAO3C,EAAAA,EAAAA,KAAH,+CAIJ4C,EAAS5C,EAAAA,EAAAA,KAAH,oIASN6C,EAAY7C,EAAAA,EAAAA,KAAH,oHAOT8C,EAAc9C,EAAAA,EAAAA,IAAH,gFAMXM,EAASN,EAAAA,EAAAA,OAAH,0nBA6BN+C,EAAe/C,EAAAA,EAAAA,OAAH,4lB,UChDzB,SAASgD,EAAQC,EAAOC,GACtB,OAAQA,EAAOrC,MACb,IAAK,OACH,OAAO,kBAAKoC,GAAZ,IAAmBE,KAAMD,EAAOE,UAClC,IAAK,SACH,OAAO,kBAAKH,GAAZ,IAAmBI,OAAQH,EAAOE,UACpC,QACE,OAAOH,EAEZ,CAEc,SAASK,EAAT,GAAwC,IAArBd,EAAoB,EAApBA,GAAIW,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,OACpCE,EAAgB,CAAEJ,KAAAA,EAAME,OAAAA,GAC9B,GAAkC7B,EAAAA,EAAAA,WAAS,GAA3C,eAAOgC,EAAP,KAAkBC,EAAlB,KACA,GAA4BjC,EAAAA,EAAAA,WAAS,GAArC,eAAOkC,EAAP,KAAeC,EAAf,KACA,GAA0BC,EAAAA,EAAAA,YAAWZ,EAASO,GAA9C,eAAON,EAAP,KAAcY,EAAd,KACMC,GAAmBC,EAAAA,EAAAA,MAWnBC,EAAa,WACjBL,GAAU,EACX,EAEKM,EAAe,SAACpC,GACpBgC,EAAS,CAAEhD,KAAMgB,EAAMS,OAAOa,KAAMC,QAASvB,EAAMS,OAAO4B,OAC3D,EAUD,OACE,UAACxB,EAAD,CAAUF,GAAIA,EAAd,WACE,UAACK,EAAD,YACE,UAACF,EAAD,eAAQQ,EAAR,OADF,KACwB,UAAC,EAAD,eAAUE,SAElC,UAACP,EAAD,YACE,SAACC,EAAD,CAAcoB,QAAQ,YAAYtD,KAAK,SAASF,QA1BpC,WAChBgD,GAAU,EACX,EAwBK,mBAGA,SAACZ,EAAD,CAAclC,KAAK,SAASF,QAlCb,WACnB8C,GAAa,GACbK,GAAiBM,EAAAA,EAAAA,IAAc5B,GAChC,EA+BwD6B,SAAUb,EAA7D,SACGA,EAAY,cAAgB,cAGhCE,IACC,SAACpC,EAAD,CAAaC,QAASyC,EAAtB,UACE,SAAC,KAAD,CAAQT,cAAeN,EAAOqB,SAvBjB,SAACC,EAAGrB,GACvBY,GACEU,EAAAA,EAAAA,IAAkB,CAAErB,KAAMF,EAAME,KAAME,OAAQJ,EAAMI,OAAQb,GAAAA,KAE9DU,EAAOuB,YACPT,GACD,EAiBO,UACE,UAAC,KAAD,YACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CACEnD,KAAK,OACLsC,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,aACZX,MAAOjB,EAAME,KACb2B,SAAUb,QAGd,UAAC,KAAD,qBAEE,SAAC,KAAD,CACEpD,KAAK,MACLsC,KAAK,SACLuB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,2CACZX,MAAOjB,EAAMI,OACbyB,SAAUb,QAGd,SAAC3D,EAAD,CAAQO,KAAK,SAAb,mCAOb,C,gBC9GYkE,EAAiB,SAAA9B,GAAK,OAAIA,EAAM+B,QAAV,EAItBC,EAAkB,SAAAhC,GAAK,OAAIA,EAAM+B,SAASxB,SAAnB,EAEvB0B,EAAmB,SAAAjC,GAAK,OAAIA,EAAM+B,SAASG,KAAnB,EAExBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACN,EAP8B,SAAA9B,GAAK,OAAIA,EAAMqC,MAAV,IAQpC,SAACN,EAAUO,GAMT,OALwBP,EAASQ,MAAMF,QAAO,SAAAG,GAE5C,OADiBA,EAAKtC,KAAKuC,cACXC,SAASJ,EAC1B,GAGF,ICjBUK,EAAe5F,EAAAA,EAAAA,GAAH,iOCMV,SAAS6F,IACtB,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYX,GAEpC,OACE,SAACQ,EAAD,UACGE,EAAgBE,KAAI,YAA2B,IAAxBxD,EAAuB,EAAvBA,GAAIW,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAChC,OAAO,SAACC,EAAD,CAAkBd,GAAIA,EAAIW,KAAMA,EAAME,OAAQA,GAAhCb,EACtB,KAGN,CCDD,I,EAAMe,GAAgB,CACpBJ,KAAM,GACNE,OAAQ,IA0EV,GAvEmB,WACjB,OAA4B7B,EAAAA,EAAAA,WAAS,GAArC,eAAOkC,EAAP,KAAeC,EAAf,KACME,GAAWE,EAAAA,EAAAA,MACFkC,GAAiBF,EAAAA,EAAAA,IAAYhB,GAApCS,MAMFxB,EAAa,YACjBkC,EAAAA,EAAAA,IAAiB7E,GACjBsC,GAAU,EACX,EAkBD,OACE,iCACE,UAAC,KAAD,CAAQrD,QAAM,EAACO,KAAK,SAASF,QA3Bf,WAChBgD,GAAU,EACX,EAyBG,WACE,SAAC,MAAD,IADF,iBAICD,IACC,SAACpC,EAAD,CAAaC,QAASyC,EAAtB,UACE,SAAC,KAAD,CAAQT,cAAeA,GAAee,SAxBzB,SAAC,EAAkB6B,GAAa,IAA7BhD,EAA4B,EAA5BA,KAAME,EAAsB,EAAtBA,OACd4C,EAAaG,MAAK,SAACC,GAAD,OAAaA,EAAQlD,OAASA,EAAKmD,MAAnC,IAG9BC,EAAAA,GAAAA,KAAA,UAAcpD,EAAd,4BAA8C,CAC5CqD,UAAW,IACXC,MAAO,UAKX5C,GAAS6C,EAAAA,EAAAA,IAAW,CAAEvD,KAAAA,EAAME,OAAAA,KAC5B8C,EAAQ1B,YACRT,IACD,EAUO,UACE,UAAC,KAAD,YACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CACEnD,KAAK,OACLsC,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,mBAGhB,UAAC,KAAD,qBAEE,SAAC,KAAD,CACEhE,KAAK,MACLsC,KAAK,SACLuB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,iDAGhB,SAAC,KAAD,CAAQhE,KAAK,SAAb,sCAOb,E,WCzFY8F,GAAU3G,EAAAA,EAAAA,IAAH,6CCKL,SAAS4G,KACtB,IAAM/C,GAAWE,EAAAA,EAAAA,MAIjB,OACE,SAAC4C,GAAD,WACE,UAAC,KAAD,qCAEE,SAAC,KAAD,CAAO9F,KAAK,OAAOiE,SAPH,SAAAjD,GACpBgC,GAASgD,EAAAA,GAAAA,GAAchF,EAAMU,cAAc2B,MAAMwB,eAClD,QASF,C,uBCLM,SAASoB,KACd,IAAM3B,GAAQY,EAAAA,EAAAA,IAAYb,GACpB1B,GAAYuC,EAAAA,EAAAA,IAAYd,GAExBpB,GAAWE,EAAAA,EAAAA,MAKjB,OAJApC,EAAAA,EAAAA,YAAU,WACRkC,GAASkD,EAAAA,EAAAA,MACV,GAAE,CAAClD,KAGF,iBAAKjD,UAAWoG,GAAAA,EAAAA,UAAhB,WACE,SAAC,GAAD,KACA,cAAGpG,UAAWoG,GAAAA,EAAAA,eAAd,uBACA,SAACJ,GAAD,KACA,SAACf,EAAD,IACCrC,IAAc2B,IACb,SAAC,KAAD,CACE8B,UAAU,oBACVC,OAAQ,IACRC,MAAO,IACPC,YAAa,EACbC,qBAAsB,EACtBC,MAAM,OACNC,eAAe,QACfC,aAAc,CAAEC,QAAS,OAAQC,eAAgB,aAGrD,SAAC,KAAD,MAGL,C","sources":["components/AddContact/AddContact.styled.jsx","components/IconBtn/IconBtn.styled.jsx","components/IconBtn/IconBtn.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","components/Contact/Contact.styled.jsx","components/Contact/Contact.js","redux/contacts/selectors.js","components/ContactList/ContactsList.styled.jsx","components/ContactList/ContactList.js","components/AddContact/AddContact.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { Field, Form } from 'formik';\r\n\r\nexport const FormField = styled(Form)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  padding: 20px 0;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  line-height: 1.5;\r\n  color: #000;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 40px;\r\n  padding-left: 18px;\r\n  padding-right: 18px;\r\n  border-radius: 4px;\r\n  border: 1px solid;\r\n  border-color: rgba(33, 33, 33, 0.2);\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const FormInput = styled(Field)`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 40px;\r\n  padding-left: 18px;\r\n  padding-right: 18px;\r\n  border-radius: 4px;\r\n  border: 1px solid;\r\n  border-color: rgba(33, 33, 33, 0.2);\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n\r\n  padding: 12px 12px;\r\n  margin-bottom: 20px;\r\n  margin-top: 50px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n  line-height: 1.88;\r\n  text-align: center;\r\n  letter-spacing: 0.06em;\r\n  background-color: #2196f3;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n  border-radius: 4px;\r\n  border-color: transparent;\r\n  transition-property: background-color;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    background-color: #188ce8;\r\n  }\r\n`;\r\n\r\nexport const AddBtn = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n\r\n  padding: 12px 12px;\r\n  margin-bottom: 20px;\r\n\r\n\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  letter-spacing: 0.06em;\r\n  background-color: #2196f3;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n  border-radius: 8px;\r\n  border-color: transparent;\r\n  transition-property: background-color;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    background-color: #188ce8;\r\n  }\r\n`\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const CloseBtn = styled.button`\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 8px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  border: transparent;\r\n  border-radius: 50%;\r\n  background-color: #fff;\r\n  color: #757575;\r\n\r\n  padding: 0;\r\n\r\n  transition-property: color, background-color;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    color: #188ce8;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CloseBtn } from \"./IconBtn.styled\";\r\n\r\nexport default function IconBtn({ children, onClick }) {\r\n  return (\r\n    <CloseBtn className=\"btn\" type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </CloseBtn>\r\n  );\r\n}\r\n\r\nIconBtn.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nIconBtn.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\n\r\nexport const BackdropOver = styled(Backdrop)`\r\n overflow: auto;\r\n`\r\n\r\nexport const ModalPaper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n\r\n  width: 30vw;\r\n  height: 40vh;\r\n  max-height: 500px;\r\n\r\n  padding: 40px;\r\n  overflow-y: auto;\r\n \r\n\r\n  background-color: #fff;\r\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\r\n    0px 2px 1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n\r\n  transform: translate(-50%, -50%) scale(1);\r\n  transition-property: transform;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\nimport { clearAllBodyScrollLocks, disableBodyScroll } from \"body-scroll-lock\";\r\n\r\nimport IconBtn from \"components/IconBtn/IconBtn\";\r\nimport { BackdropOver, ModalPaper } from \"./Modal.styled\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport let targetElement = null;\r\n\r\nexport const ModalWindow = ({ children, onClose }) => {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  const onBackdropClickHandler = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onEscHandler = (event) => {\r\n      if (event.code === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", onEscHandler);\r\n    return () => window.removeEventListener(\"keydown\", onEscHandler);\r\n  }, [onClose]);\r\n\r\n  useEffect(() => {\r\n    if (!isMounted) {\r\n      setIsMounted(true);\r\n      targetElement = document.querySelector(\"#backdrop\");\r\n      return;\r\n    }\r\n\r\n    disableBodyScroll(targetElement);\r\n\r\n    return () => clearAllBodyScrollLocks();\r\n  }, [isMounted]);\r\n\r\n  return createPortal(\r\n    <BackdropOver open={true} onClick={onBackdropClickHandler} id=\"backdrop\">\r\n      <ModalPaper>\r\n        <IconBtn onClick={onClose}>\r\n          <AiOutlineCloseCircle size=\"30px\" />\r\n        </IconBtn>\r\n        {children}\r\n      </ModalPaper>\r\n    </BackdropOver>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nModalWindow.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  line-height: 1.5;\r\n  color: #000;\r\n`;\r\n\r\nexport const Name = styled.span`\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const Number = styled.span`\r\ndisplay: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 400px;\r\n  font-weight: 400;\r\n`;\r\n\r\nexport const TextField = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 65%;\r\n`;\r\n\r\nexport const BtnsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding: 12px 12px;\r\n  max-width: 160px;\r\n  margin: 50px auto 0 auto;\r\n\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.88;\r\n  text-align: center;\r\n  letter-spacing: 0.06em;\r\n  background-color: #2196f3;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n  border-radius: 4px;\r\n  border-color: transparent;\r\n  transition-property: background-color;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    background-color: #188ce8;\r\n  }\r\n`;\r\n\r\nexport const OptionButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding: 8px 40px;\r\n  max-width: 160px;\r\n\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.88;\r\n  text-align: center;\r\n  letter-spacing: 0.06em;\r\n  background-color: #2196f3;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n  border-radius: 4px;\r\n  border-color: transparent;\r\n  transition-property: background-color;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    background-color: #188ce8;\r\n  }\r\n`;\r\n","import React, { useReducer, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { changeContactData, deleteContact } from \"redux/contacts/operations\";\r\nimport { ModalWindow } from \"components/Modal/Modal\";\r\n\r\nimport {\r\n  BtnsWrapper,\r\n  ListItem,\r\n  Name,\r\n  Number,\r\n  TextField,\r\n  Button,\r\n  OptionButton,\r\n} from \"./Contact.styled\";\r\nimport { FormInput, Label, FormField } from \"../AddContact/AddContact.styled\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"name\":\r\n      return { ...state, name: action.payload };\r\n    case \"number\":\r\n      return { ...state, number: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default function Contact({ id, name, number }) {\r\n  const initialValues = { name, number };\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [state, dispatch] = useReducer(reducer, initialValues);\r\n  const dispatchOperator = useDispatch();\r\n\r\n  const handleDelete = () => {\r\n    setIsLoading(true);\r\n    dispatchOperator(deleteContact(id));\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    dispatch({ type: event.target.name, payload: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (_, action) => {\r\n    dispatchOperator(\r\n      changeContactData({ name: state.name, number: state.number, id })\r\n    );\r\n    action.resetForm();\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <ListItem id={id}>\r\n      <TextField>\r\n        <Name> {name} </Name> <Number> {number}</Number>\r\n      </TextField>\r\n      <BtnsWrapper>\r\n        <OptionButton variant=\"contained\" type=\"button\" onClick={openModal}>\r\n          Edit\r\n        </OptionButton>\r\n        <OptionButton type=\"button\" onClick={handleDelete} disabled={isLoading}>\r\n          {isLoading ? \"Deleting...\" : \"Delete\"}\r\n        </OptionButton>\r\n      </BtnsWrapper>\r\n      {isOpen && (\r\n        <ModalWindow onClose={closeModal}>\r\n          <Formik initialValues={state} onSubmit={handleSubmit}>\r\n            <FormField>\r\n              <Label>\r\n                Name\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                  required\r\n                  placeholder=\"Enter name\"\r\n                  value={state.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Label>\r\n              <Label>\r\n                Number\r\n                <FormInput\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                  required\r\n                  placeholder=\"Enter number. For example: 098-084-68-40\"\r\n                  value={state.number}\r\n                  onChange={handleChange}\r\n                />\r\n              </Label>\r\n              <Button type=\"submit\">Save changes</Button>\r\n            </FormField>\r\n          </Formik>\r\n        </ModalWindow>\r\n      )}\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const selectContacts = state => state.contacts;\r\n\r\nexport const selectFilterValue = state => state.filter;\r\n\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\n\r\nexport const selectErrorValue = state => state.contacts.error;\r\n\r\nexport const selectVisibleContacts = createSelector(\r\n  [selectContacts, selectFilterValue],\r\n  (contacts, filterValue) => {\r\n    const visibleContacts = contacts.items.filter(item => {\r\n      const itemName = item.name.toLowerCase();\r\n      return itemName.includes(filterValue);\r\n    });\r\n\r\n    return visibleContacts;\r\n  }\r\n);\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactsList = styled.ul`\r\n  margin-top: 30px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 16px;\r\n  width: 100%;\r\n  padding: 24px 12px;\r\n  border: 1px solid #eee;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Contact from '../Contact';\r\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\r\n\r\nimport { ContactsList } from './ContactsList.styled';\r\n\r\nexport default function ContactList() {\r\n  const visibleContacts = useSelector(selectVisibleContacts);\r\n\r\n  return (\r\n    <ContactsList>\r\n      {visibleContacts.map(({ id, name, number }) => {\r\n        return <Contact key={id} id={id} name={name} number={number} />;\r\n      })}\r\n    </ContactsList>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\r\n\r\nimport { selectContacts } from \"redux/contacts/selectors\";\r\nimport { addContact } from \"redux/contacts/operations\";\r\n\r\nimport { Button } from \"./AddContact.styled\";\r\n\r\nimport { ModalWindow, targetElement } from \"components/Modal/Modal\";\r\nimport { FormInput, Label, FormField, AddBtn } from \"./AddContact.styled\";\r\n\r\nimport { enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst AddContact = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { items: contactsList } = useSelector(selectContacts);\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    enableBodyScroll(targetElement);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleSubmit = ({ name, number }, actions) => {\r\n    const check = contactsList.find((contact) => contact.name === name.trim());\r\n\r\n    if (check) {\r\n      toast.warn(`${name} is already in contacts.`, {\r\n        autoClose: 3000,\r\n        theme: \"dark\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact({ name, number }));\r\n    actions.resetForm();\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddBtn Button type=\"button\" onClick={openModal}>\r\n        <AiOutlineUserAdd />\r\n        Add contact\r\n      </AddBtn>\r\n      {isOpen && (\r\n        <ModalWindow onClose={closeModal}>\r\n          <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n            <FormField>\r\n              <Label>\r\n                Name\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                  required\r\n                  placeholder=\"Enter name\"\r\n                />\r\n              </Label>\r\n              <Label>\r\n                Number\r\n                <FormInput\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                  required\r\n                  placeholder=\"Enter number. For example: 098-084-68-40\"\r\n                />\r\n              </Label>\r\n              <Button type=\"submit\">Add new contact</Button>\r\n            </FormField>\r\n          </Formik>\r\n        </ModalWindow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddContact;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterContact } from 'redux/contacts/filterSlice';\r\n\r\nimport { Label, Input } from 'components/AddContact/AddContact.styled';\r\nimport { Wrapper } from './Filter.styled';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const changeHandler = event => {\r\n    dispatch(filterContact(event.currentTarget.value.toLowerCase()));\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Label>\r\n        Find contacts by name:\r\n        <Input type=\"text\" onChange={changeHandler} />\r\n      </Label>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Oval } from \"react-loader-spinner\";\r\n\r\nimport ContactList from \"../components/ContactList\";\r\nimport AddContact from \"../components/AddContact\";\r\nimport Filter from \"../components/Filter\";\r\n\r\nimport { fetchContacts } from \"redux/contacts/operations\";\r\nimport { selectErrorValue, selectIsLoading } from \"redux/contacts/selectors\";\r\n\r\nimport css from \"../components/App/App.module.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport function Contacts() {\r\n  const error = useSelector(selectErrorValue);\r\n  const isLoading = useSelector(selectIsLoading);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <AddContact />\r\n      <p className={css.sectionHeading}>Contacts</p>\r\n      <Filter />\r\n      <ContactList />\r\n      {isLoading && !error && (\r\n        <Oval\r\n          ariaLabel=\"loading-indicator\"\r\n          height={100}\r\n          width={100}\r\n          strokeWidth={5}\r\n          strokeWidthSecondary={1}\r\n          color=\"blue\"\r\n          secondaryColor=\"white\"\r\n          wrapperStyle={{ display: \"flex\", justifyContent: \"center\" }}\r\n        />\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["FormField","styled","Form","Label","Input","FormInput","Field","Button","AddBtn","CloseBtn","IconBtn","children","onClick","className","type","defaultProps","BackdropOver","Backdrop","ModalPaper","modalRoot","document","querySelector","targetElement","ModalWindow","onClose","useState","isMounted","setIsMounted","useEffect","onEscHandler","event","code","window","addEventListener","removeEventListener","disableBodyScroll","clearAllBodyScrollLocks","createPortal","open","target","currentTarget","id","size","ListItem","Name","Number","TextField","BtnsWrapper","OptionButton","reducer","state","action","name","payload","number","Contact","initialValues","isLoading","setIsLoading","isOpen","setIsOpen","useReducer","dispatch","dispatchOperator","useDispatch","closeModal","handleChange","value","variant","deleteContact","disabled","onSubmit","_","changeContactData","resetForm","pattern","title","required","placeholder","onChange","selectContacts","contacts","selectIsLoading","selectErrorValue","error","selectVisibleContacts","createSelector","filter","filterValue","items","item","toLowerCase","includes","ContactsList","ContactList","visibleContacts","useSelector","map","contactsList","enableBodyScroll","actions","find","contact","trim","toast","autoClose","theme","addContact","Wrapper","Filter","filterContact","Contacts","fetchContacts","css","ariaLabel","height","width","strokeWidth","strokeWidthSecondary","color","secondaryColor","wrapperStyle","display","justifyContent"],"sourceRoot":""}